version: '3.8'  # Specify the docker-compose version

services:
  till:
    build:   # Build the image from the current directory (context)
      context: .
      dockerfile: ./Host/Till/Dockerfile
    container_name: till_container 
    ports:
      - "0.0.0.0:6080:6080" 
      - "0.0.0.0:6081:6081"  
      - "0.0.0.0:6082:6082"
    depends_on:  
      - tilldb
    environment:
      - DB_HOST=tilldb
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=12345
      - DB_NAME=TillDB
  
  tilldb:
    image: postgres:latest
    container_name: tilldb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: TillDB
    ports:
      - "0.0.0.0:5437:5432"
    volumes:
      - till_db_data2:/var/lib/postgresql/data


  hub:
    build:   # Build the image from the current directory (context)
      context: .
      dockerfile: ./Host/Hub/Dockerfile
    container_name: hub_container 
    ports:
      - "0.0.0.0:9080:9080" 
      - "0.0.0.0:9081:9081"  
      - "0.0.0.0:9082:9082"
    depends_on:  
      - hubdb
      - redis
    environment:
      - DB_HOST=hubdb
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=12345
      - DB_NAME=HubDB

  hubdb:
    image: postgres:latest
    container_name: hubdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: HubDB
    ports:
      - "0.0.0.0:5435:5432"
    volumes:
      - hub_db_data2:/var/lib/postgresql/data

  auth:
    build:   # Build the image from the current directory (context)
      context: .
      dockerfile: ./Host/Auth/Dockerfile
    container_name: auth_container 
    ports:
      - "0.0.0.0:8080:8080" 
      - "0.0.0.0:8081:8081"  
      - "0.0.0.0:8082:8082"
    depends_on:  
      - authdb
    environment:
      - DB_HOST=Authdb
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=12345
      - DB_NAME=AuthDB

  authdb:
    image: postgres:latest
    container_name: authdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: AuthDB
    ports:
      - "0.0.0.0:5436:5432"
    volumes:
      - auth_db_data2:/var/lib/postgresql/data




  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_env03
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    extra_hosts:
      - "localhost: 10.10.2.82"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_env03
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,OUTSIDE://10.10.2.82:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    extra_hosts:
      - "localhost: 10.10.2.82"

  kafkaUI:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_UI03
    ports:
      - 5080:5082
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    extra_hosts:
      - "localhost: 10.10.2.82"

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"  # Expose Redis on the default port

volumes:
  till_db_data2:
  hub_db_data2:
  auth_db_data2:
  






